package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.32

import (
	"context"
	"fmt"

	"go.infratographer.com/ipam-api/internal/ent/generated"
	"go.infratographer.com/x/gidx"
)

// FindIPAddressByID is the resolver for the findIPAddressByID field.
func (r *entityResolver) FindIPAddressByID(ctx context.Context, id gidx.PrefixedID) (*generated.IPAddress, error) {
	return r.client.IPAddress.Get(ctx, id)
}

// FindIPAddressableByID is the resolver for the findIPAddressableByID field.
func (r *entityResolver) FindIPAddressableByID(ctx context.Context, id gidx.PrefixedID) (*IPAddressable, error) {
	panic(fmt.Errorf("not implemented: FindIPAddressableByID - findIPAddressableByID"))
}

// FindIPBlockByID is the resolver for the findIPBlockByID field.
func (r *entityResolver) FindIPBlockByID(ctx context.Context, id gidx.PrefixedID) (*generated.IPBlock, error) {
	return r.client.IPBlock.Get(ctx, id)
}

// FindIPBlockTypeByID is the resolver for the findIPBlockTypeByID field.
func (r *entityResolver) FindIPBlockTypeByID(ctx context.Context, id gidx.PrefixedID) (*generated.IPBlockType, error) {
	return r.client.IPBlockType.Get(ctx, id)
}

// FindOwnerByID is the resolver for the findOwnerByID field.
func (r *entityResolver) FindOwnerByID(ctx context.Context, id gidx.PrefixedID) (*Owner, error) {
	return &Owner{ID: id}, nil
}

// Entity returns EntityResolver implementation.
func (r *Resolver) Entity() EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
