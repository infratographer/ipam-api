// Copyright Infratographer, Inc. and/or licensed to Infratographer, Inc. under one
// or more contributor license agreements. Licensed under the Elastic License 2.0;
// you may not use this file except in compliance with the Elastic License 2.0.
//
// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// IPAddressesColumns holds the columns for the "ip_addresses" table.
	IPAddressesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "ip", Type: field.TypeString, Size: 2147483647},
		{Name: "node_id", Type: field.TypeString},
		{Name: "node_owner_id", Type: field.TypeString},
		{Name: "reserved", Type: field.TypeBool, Default: true},
		{Name: "block_id", Type: field.TypeString},
	}
	// IPAddressesTable holds the schema information for the "ip_addresses" table.
	IPAddressesTable = &schema.Table{
		Name:       "ip_addresses",
		Columns:    IPAddressesColumns,
		PrimaryKey: []*schema.Column{IPAddressesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ip_addresses_ip_blocks_ip_block",
				Columns:    []*schema.Column{IPAddressesColumns[7]},
				RefColumns: []*schema.Column{IPBlocksColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ipaddress_created_at",
				Unique:  false,
				Columns: []*schema.Column{IPAddressesColumns[1]},
			},
			{
				Name:    "ipaddress_updated_at",
				Unique:  false,
				Columns: []*schema.Column{IPAddressesColumns[2]},
			},
			{
				Name:    "ipaddress_node_owner_id_block_id_node_id",
				Unique:  false,
				Columns: []*schema.Column{IPAddressesColumns[5], IPAddressesColumns[7], IPAddressesColumns[4]},
			},
		},
	}
	// IPBlocksColumns holds the columns for the "ip_blocks" table.
	IPBlocksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "prefix", Type: field.TypeString, Size: 2147483647},
		{Name: "location_id", Type: field.TypeString},
		{Name: "parent_block_id", Type: field.TypeString},
		{Name: "allow_auto_subnet", Type: field.TypeBool, Default: true},
		{Name: "allow_auto_allocate", Type: field.TypeBool, Default: true},
		{Name: "block_type_id", Type: field.TypeString},
	}
	// IPBlocksTable holds the schema information for the "ip_blocks" table.
	IPBlocksTable = &schema.Table{
		Name:       "ip_blocks",
		Columns:    IPBlocksColumns,
		PrimaryKey: []*schema.Column{IPBlocksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ip_blocks_ip_block_types_ip_block_type",
				Columns:    []*schema.Column{IPBlocksColumns[8]},
				RefColumns: []*schema.Column{IPBlockTypesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ipblock_created_at",
				Unique:  false,
				Columns: []*schema.Column{IPBlocksColumns[1]},
			},
			{
				Name:    "ipblock_updated_at",
				Unique:  false,
				Columns: []*schema.Column{IPBlocksColumns[2]},
			},
			{
				Name:    "ipblock_block_type_id",
				Unique:  false,
				Columns: []*schema.Column{IPBlocksColumns[8]},
			},
		},
	}
	// IPBlockTypesColumns holds the columns for the "ip_block_types" table.
	IPBlockTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "owner_id", Type: field.TypeString},
	}
	// IPBlockTypesTable holds the schema information for the "ip_block_types" table.
	IPBlockTypesTable = &schema.Table{
		Name:       "ip_block_types",
		Columns:    IPBlockTypesColumns,
		PrimaryKey: []*schema.Column{IPBlockTypesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "ipblocktype_created_at",
				Unique:  false,
				Columns: []*schema.Column{IPBlockTypesColumns[1]},
			},
			{
				Name:    "ipblocktype_updated_at",
				Unique:  false,
				Columns: []*schema.Column{IPBlockTypesColumns[2]},
			},
			{
				Name:    "ipblocktype_owner_id",
				Unique:  false,
				Columns: []*schema.Column{IPBlockTypesColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		IPAddressesTable,
		IPBlocksTable,
		IPBlockTypesTable,
	}
)

func init() {
	IPAddressesTable.ForeignKeys[0].RefTable = IPBlocksTable
	IPBlocksTable.ForeignKeys[0].RefTable = IPBlockTypesTable
}
